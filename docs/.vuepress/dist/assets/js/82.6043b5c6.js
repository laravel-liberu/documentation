(window.webpackJsonp=window.webpackJsonp||[]).push([[82],{277:function(e,t,a){"use strict";a.r(t);var o=a(2),s=Object(o.a)({},function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"usage"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#usage","aria-hidden":"true"}},[e._v("#")]),e._v(" Usage")]),e._v(" "),a("h2",{attrs:{id:"setup-a-new-project"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#setup-a-new-project","aria-hidden":"true"}},[e._v("#")]),e._v(" Setup a new project")]),e._v(" "),a("ol",[a("li",[e._v("Follow the install steps")]),e._v(" "),a("li",[e._v("Delete the .git folder and run "),a("code",[e._v("git init")]),e._v(", then configure repository for your custom project")]),e._v(" "),a("li",[e._v("Develop")]),e._v(" "),a("li",[e._v("To update run "),a("code",[e._v("composer update")]),e._v(" / "),a("code",[e._v("yarn update")]),e._v(" and compile")]),e._v(" "),a("li",[e._v("Breaking changes in the dependencies? Update your custom code then update the new versions in "),a("code",[e._v("composer.json")]),e._v(" and run "),a("code",[e._v("composer update")])]),e._v(" "),a("li",[e._v("Need another new project ? Start again from the first step")])]),e._v(" "),a("h2",{attrs:{id:"updates"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#updates","aria-hidden":"true"}},[e._v("#")]),e._v(" Updates")]),e._v(" "),a("p",[e._v("When we must make breaking changes to the packages, we increase the minor version.\nDue to how dependencies are defined, composer will not update the dependencies for you in that case,\nthat's why you need to look at the changelog, be aware of the changes, update your code and then manually update\nthe dependencies' minor version, so that you can continue to receive updates.")]),e._v(" "),a("p",[e._v("When updating Liberu and introducing possibly breaking changes, we might make available various Artisan commands,\nmeant to make the update easier.\nYou can see the list of currently available commands by running "),a("code",[e._v("php artisan liberu")]),e._v("\nand remember to always consult the changelog.")]),e._v(" "),a("h3",{attrs:{id:"notes"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#notes","aria-hidden":"true"}},[e._v("#")]),e._v(" Notes")]),e._v(" "),a("p",[e._v("When you run "),a("code",[e._v("compose update")]),e._v(" and the front-end asseets are published/upgraded recompiling ("),a("code",[e._v("yarn dev")]),e._v("/"),a("code",[e._v("prod")]),e._v(") is all you need to do.\nIf packages that depend on new permissions are added in the update process, you should run "),a("code",[e._v("php artisan:migrate")]),e._v(" to add those permissions to the database.")]),e._v(" "),a("h2",{attrs:{id:"localisation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#localisation","aria-hidden":"true"}},[e._v("#")]),e._v(" Localisation")]),e._v(" "),a("p",[e._v("Localisation is supported, with several languages already available out of the box and\nwith the option to add others.")]),e._v(" "),a("p",[e._v("Once a language has been made available, an application user can choose the language\nhe wants to use in the preferences side bar.  Until that choice is made,\nusers will be using the default application locale.")]),e._v(" "),a("p",[e._v("Since on the authentication pages (login, password reset) the user is not currently logged in\nand the system would not normally have access to his preferences, the application\nwill attempt to use the user's preferences from the browser's local storage if they were ever set,\nfalling back to the application language otherwise.")]),e._v(" "),a("p",[e._v("Once the user is logged in, both the back-end and the front-end will have access to the translated\nvalues that have been added in the application.")]),e._v(" "),a("p",[e._v("If you want to add/contribute a new language, there are a few steps involved, so please check out\nthe "),a("a",{attrs:{href:"https://github.com/laravel-liberu/Localisation#contributing-a-new-language",target:"_blank",rel:"noopener noreferrer"}},[e._v("relevant section"),a("OutboundLink")],1),e._v(" of\nthe "),a("a",{attrs:{href:"https://github.com/laravel-liberu/Localisation",target:"_blank",rel:"noopener noreferrer"}},[e._v("localisation"),a("OutboundLink")],1),e._v(" package.")]),e._v(" "),a("h2",{attrs:{id:"icons"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#icons","aria-hidden":"true"}},[e._v("#")]),e._v(" Icons")]),e._v(" "),a("p",[e._v("We want to keep the compiled size down throughout the Liberu ecosystem so icons are imported selectively.")]),e._v(" "),a("p",[e._v("What this means for you is that the necessary icons should be imported inside your components/pages.\nIf you want to import FA icons globally (not recommended) the place to include them is:")]),e._v(" "),a("p",[a("code",[e._v("resources/assets/js/app.js")])]),e._v(" "),a("p",[e._v("For menus, icons should be imported in:\n"),a("code",[e._v("assets/js/core/structure/sidebar/icons/app.js")])]),e._v(" "),a("p",[e._v("For languages, flag icons should be imported in:\n"),a("code",[e._v("resources/assets/sass/app.scss")])]),e._v(" "),a("p",[e._v("(use "),a("code",[e._v("flags.scss")]),e._v(" as a reference)")]),e._v(" "),a("h2",{attrs:{id:"email-templates"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#email-templates","aria-hidden":"true"}},[e._v("#")]),e._v(" Email templates")]),e._v(" "),a("p",[e._v("By default, Liberu comes with a few templates for the email notifications used out of the box.\nIf you need to create other templates or change the existing ones, a good starting point is to publish\nthe existing templates, using the "),a("code",[e._v("php artisan vendor:publish --tag=liberu-mail")]),e._v(" artisan command.")]),e._v(" "),a("p",[e._v("The blade templates will be published in the  "),a("code",[e._v("resources/views/vendor/laravel-liberu")]),e._v(" folder.\nYou'll find the template layout and partials in the "),a("code",[e._v("core")]),e._v(" folder and sub-folders.")]),e._v(" "),a("p",[e._v("By default, the Mailtrap "),a("a",{attrs:{href:"https://documentation.mailgun.com/en/latest/user_manual.html#tracking-unsubscribes",target:"_blank",rel:"noopener noreferrer"}},[e._v("token variable"),a("OutboundLink")],1),e._v(" is used for the unsubscribe link.\nYou may customize the footer partial to use the desired token.")]),e._v(" "),a("h2",{attrs:{id:"vuex-store"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vuex-store","aria-hidden":"true"}},[e._v("#")]),e._v(" Vuex store")]),e._v(" "),a("p",[e._v("When developing an application on top of Liberu, it makes sense to keep your app state data separate from the core Liberu state.\nIn order to achieve this, you need to customize just 2 files, one for each layer.")]),e._v(" "),a("h3",{attrs:{id:"back-end"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#back-end","aria-hidden":"true"}},[e._v("#")]),e._v(" Back-End")]),e._v(" "),a("ul",[a("li",[e._v("you need a "),a("code",[e._v("StateBuilder")]),e._v(" implementation class,\nthat should be given as a value for the "),a("code",[e._v("liberu.config.stateBuilder")]),e._v(" configuration parameter")]),e._v(" "),a("li",[e._v("by default, the "),a("code",[e._v("App\\Classes\\LocalState")]),e._v(" is provided as blank template")]),e._v(" "),a("li",[e._v("the additional state data is returned to the front end via the same response ("),a("code",[e._v("/core/api")]),e._v(") as the core Liberu state data")])]),e._v(" "),a("h3",{attrs:{id:"front-end"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#front-end","aria-hidden":"true"}},[e._v("#")]),e._v(" Front-End")]),e._v(" "),a("p",[e._v("As you may need to initialize or otherwise process the local state data received from the back-end,\n"),a("code",[e._v("resources/assets/js/localState.js")]),e._v(" holds the entry point method you can customize and add logic to.")]),e._v(" "),a("p",[e._v("Here you'll have access to the Vuex "),a("code",[e._v("context")]),e._v(" object and your local "),a("code",[e._v("state")]),e._v(" data, received from the back-end.")])])},[],!1,null,null,null);t.default=s.exports}}]);